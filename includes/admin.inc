<?php

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Escapia API administrative settings.
 */
function escapia_api_import_admin_form ($form, &$form_state) {
  $form = array();

  $form['escapia_api_username'] = array(
    '#type' => 'textfield',
    '#description' => 'Enter Escapia API Account User Name.',
    '#title' => t('Username'),
    '#default_value' => variable_get('escapia_api_username', ''),
    '#required' => TRUE,
  );

  $form['escapia_api_userpass'] = array(
    '#type' => 'textfield',
    '#description' => 'Enter Escapia API Account password.',
    '#title' => t('Password'),
    '#default_value' => variable_get('escapia_api_userpass', ''),
      '#required' => TRUE,
  );

  $form['escapia_api_schema_version'] = array(
    '#type' => 'textfield',
    '#description' => 'Version of the Escapia API request schema used to construct request objects.',
    '#title' => t('Escapia API Version'),
    '#default_value' => variable_get('escapia_api_schema_version', '1.0'),
    '#required' => TRUE,
  );

  $form['escapia_error_contact_msg'] = array(
    '#type' => 'textfield',
    '#description' => 'Escapia API scrubs phone numbers from error messages. Add your custom text here for contact information in case of Availability check error.',
    '#title' => t('Escapia Availability Check Error - Contact Message'),
    '#default_value' => variable_get('escapia_error_contact_msg', ''),
  );

  if(module_exists('escapia_reviews_wsclient_feeds')) {
    $form['escapia_api_reviews_import'] = array(
      '#type' => 'select',
      '#options' => array(
        '3600' => 'Every 1 hour',
        '10800' => 'Every 3 hours',
        '21600' => 'Every 6 hours',
        '32400' => 'Every 9 hours',
        '43200' => 'Every 12 hours',
        '0' => 'On every Unit update',
      ),
      '#description' => 'Pick how often should Reviews be updated for the Unit.',
      '#title' => t('Reviews Update Frequency'),
      '#default_value' => variable_get('escapia_api_reviews_import', '43200'),
      '#required' => FALSE,
    );
  }

  if(module_exists('escapia_api_booking')) {
    $form['escapia_api_developer_mode'] = array(
      '#type' => 'checkbox',
      '#title' => 'Developer Mode',
      '#default_value' => variable_get('escapia_api_developer_mode', 0),
      '#description' => 'Check this on to enable Developer testing mode and prevent actual bookings from happening.',
    );

    $form['escapia_api_hapi'] = array(
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#title' => t('HAPI Details'),
      '#description' => '<p>If you are using in-site booking via the Escapia Property Booking module, enter the HAPI information below. It is required in order to generate credit card tokens to reserve a rental.</p>',
    );

    $form['escapia_api_hapi']['escapia_hapi_endpoint'] = array(
      '#title' => t('Endpoint URL'),
      '#description' => t('Specify the endpoint to the HAPI service to generate credit card tokens.'),
      '#type' => 'textfield',
      '#default_value' => variable_get('escapia_hapi_endpoint', ''),
    );

    $form['escapia_api_hapi']['escapia_hapi_api_key'] = array(
      '#title' => t('API Key'),
      '#description' => t('The HAPI API Key generated by the link provided to you from Escapia.'),
      '#type' => 'textfield',
      '#default_value' => variable_get('escapia_hapi_api_key', ''),
    );

    $form['escapia_api_hapi']['escapia_hapi_client_id'] = array(
      '#title' => t('Client ID'),
      '#description' => t('The HAPI client ID assigned to you from Escapia. This is not the same as your Escapia username.'),
      '#type' => 'textfield',
      '#default_value' => variable_get('escapia_hapi_client_id', ''),
    );
  }

  return system_settings_form($form);
}